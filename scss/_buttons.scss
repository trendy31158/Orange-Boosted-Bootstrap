//
// Base styles
//

.btn {
  // scss-docs-start btn-css-vars
  --#{$prefix}btn-padding-start: #{$btn-padding-x};
  --#{$prefix}btn-padding-end: #{$btn-padding-x};
  --#{$prefix}btn-padding-y: #{$btn-padding-y};
  --#{$prefix}btn-min-width: #{$ouds-button-size-min-width}; // OUDS mod
  --#{$prefix}btn-min-height: #{$ouds-button-size-min-height}; // OUDS mod
  --#{$prefix}btn-font-family: #{$btn-font-family};
  // OUDS mod: no `@include rfs($btn-font-size, --#{$prefix}btn-font-size)`
  --#{$prefix}btn-font-weight: #{$btn-font-weight};
  // OUDS mod: no `--#{$prefix}btn-line-height`
  --#{$prefix}btn-color: #{$btn-color};
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-width: #{$btn-border-width};
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-border-radius: #{$btn-border-radius};
  --#{$prefix}btn-hover-color: #{$btn-hover-color}; // OUDS mod
  --#{$prefix}btn-hover-border-color: initial; // OUDS mod: instead of transparent
  --#{$prefix}btn-interaction-border-width: #{$btn-border-width}; // OUDS mod
  --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
  --#{$prefix}btn-disabled-opacity: #{$btn-disabled-opacity}; // TODO to check
  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} var(--#{$prefix}btn-focus-shadow-rgb); // OUDS mod
  --#{$prefix}icon-spacing: #{$btn-icon-padding-left}; // OUDS mod TODO to check, maybe $btn-icon-padding-x?
  --#{$prefix}loading-indeterminate-icon: #{escape-svg(url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path d='M20 10C20 11.9778 19.4135 13.9112 18.3147 15.5557C17.2159 17.2002 15.6541 18.4819 13.8268 19.2388C11.9996 19.9957 9.98891 20.1937 8.0491 19.8079C6.10929 19.422 4.32746 18.4696 2.92893 17.0711C1.53041 15.6725 0.577999 13.8907 0.192147 11.9509C-0.193705 10.0111 0.00432836 8.00043 0.761205 6.17317C1.51808 4.3459 2.79981 2.78412 4.4443 1.6853C6.08879 0.58649 8.02219 -2.35852e-08 10 0V3C8.61553 3 7.26215 3.41054 6.11101 4.17971C4.95986 4.94888 4.06266 6.04213 3.53284 7.32122C3.00303 8.6003 2.86441 10.0078 3.1345 11.3656C3.4046 12.7235 4.07128 13.9708 5.05025 14.9497C6.02922 15.9287 7.2765 16.5954 8.63437 16.8655C9.99224 17.1356 11.3997 16.997 12.6788 16.4672C13.9579 15.9373 15.0511 15.0401 15.8203 13.889C16.5895 12.7378 17 11.3845 17 10H20Z'/></svg>"))}; // OUDS mod
  --#{$prefix}btn-focus-bg: var(--#{$prefix}btn-hover-bg); // OUDS mod
  --#{$prefix}btn-focus-border-color: var(--#{$prefix}btn-hover-border-color); // OUDS mod
  --#{$prefix}btn-focus-color: var(--#{$prefix}btn-hover-color); // OUDs mod
  // scss-docs-end btn-css-vars

  display: inline-flex; // OUDS mod: instead of inline-block
  align-items: center; // OUDS mod
  justify-content: center; // OUDS mod
  min-width: var(--#{$prefix}btn-min-width); // OUDS mod
  min-height: var(--#{$prefix}btn-min-height); // OUDS mod
  padding:
    subtract(var(--#{$prefix}btn-padding-y), var(--#{$prefix}btn-border-width))
    subtract(var(--#{$prefix}btn-padding-end), var(--#{$prefix}btn-border-width))
    subtract(var(--#{$prefix}btn-padding-y), var(--#{$prefix}btn-border-width))
    subtract(var(--#{$prefix}btn-padding-start), var(--#{$prefix}btn-border-width)); // OUDS mod
  font-family: var(--#{$prefix}btn-font-family);
  @include get-font-size("label-large"); // OUDS mod
  font-weight: var(--#{$prefix}btn-font-weight);
  // OUDS mod: no line-height, already defined by get-font-size
  color: var(--#{$prefix}btn-color);
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  border: var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);
  @include border-radius(var(--#{$prefix}btn-border-radius));
  @include gradient-bg(var(--#{$prefix}btn-bg));
  @include box-shadow(var(--#{$prefix}btn-box-shadow));
  @include transition($btn-transition);

  &:hover,
  &:focus-visible, // OUDS mod: apply hover styles to focus visible as well
  &:focus[data-focus-visible-added] { // OUDS mod: apply hover styles to focus visible as well
    padding:
      subtract(var(--#{$prefix}btn-padding-y), var(--#{$prefix}btn-interaction-border-width))
      subtract(var(--#{$prefix}btn-padding-end), var(--#{$prefix}btn-interaction-border-width))
      subtract(var(--#{$prefix}btn-padding-y), var(--#{$prefix}btn-interaction-border-width))
      subtract(var(--#{$prefix}btn-padding-start), var(--#{$prefix}btn-interaction-border-width)); // OUDS mod
    color: var(--#{$prefix}btn-hover-color);
    text-decoration: if($link-hover-decoration == underline, none, null);
    background-color: var(--#{$prefix}btn-hover-bg);
    border-color: var(--#{$prefix}btn-focus-border-color);
    border-width: var(--#{$prefix}btn-interaction-border-width); // OUDS mod
  }

  // OUDS mod: no .btn-check + &:hover

  // OUDS mod: no &:focus-visible already handled

  // OUDS mod: no .btn-check:focus-visible + &

  // OUDS mod: selectors are slightly different to handle `.btn-check:checked`
  .btn-check:checked + &:active,
  .btn-check:checked + &,
  &:active,
  &.active,
  &.show {
    padding:
      subtract(var(--#{$prefix}btn-padding-y), var(--#{$prefix}btn-interaction-border-width))
      subtract(var(--#{$prefix}btn-padding-end), var(--#{$prefix}btn-interaction-border-width))
      subtract(var(--#{$prefix}btn-padding-y), var(--#{$prefix}btn-interaction-border-width))
      subtract(var(--#{$prefix}btn-padding-start), var(--#{$prefix}btn-interaction-border-width)); // OUDS mod
    color: var(--#{$prefix}btn-active-color);
    background-color: var(--#{$prefix}btn-active-bg);
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-active-border-color);
    border-width: var(--#{$prefix}btn-interaction-border-width); // OUDS mod
    // OUDS mod: no box shadow modification for the active state
    // OUDS mod: no &:focus-visible
  }
  // End mod

  // OUDS mod: no `.btn-check:checked:focus-visible + &` to handle box shadow

  // OUDS mod: selectors are slightly different to handle `.btn-check`
  // TODO how to handle to disable links with aria-disabled only
  .btn-check:disabled + &,
  &:disabled:not(.loading-indeterminate):not(.loading-determinate):not(.skeleton):not(:has(.loader-indeterminate-span)),
  &.disabled,
  fieldset:disabled & {
    color: var(--#{$prefix}btn-disabled-color);
    background-color: var(--#{$prefix}btn-disabled-bg);
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-disabled-border-color);
    opacity: var(--#{$prefix}btn-disabled-opacity);
    @include box-shadow(none);
  }

  .btn-check:disabled + &,
  &:disabled,
  &.disabled,
  fieldset:disabled & {
    pointer-events: none;
  }
  // End mod

  // OUDS mod: buttons with icon and text
  &:not(.btn-icon):has(> svg),
  &:not(.btn-icon):has(> img),
  &:not(.btn-icon):has(> .icon) {
    --#{$prefix}btn-padding-start: #{$ouds-button-space-padding-inline-icon-start};
    --#{$prefix}btn-padding-end: #{$ouds-button-space-padding-inline-start-icon-end};
  }

  &:not(.btn-icon) > svg,
  &:not(.btn-icon) > img,
  &:not(.btn-icon) > .icon {
    width: $ouds-button-size-icon;
    height: $ouds-button-size-icon;
    margin-right: $ouds-button-space-column-gap-icon;
    overflow: hidden;
    font-size: $ouds-button-size-icon;
    line-height: $ouds-button-size-icon;
  }
  // End mod

  // OUDS mod: loading buttons
  &:has(.loader-indeterminate-span) {
    color: transparent;
  }

  .loader-indeterminate-span {
    position: absolute;
    display: inline-block;
    width: px-to-rem($ouds-button-size-loader);
    height: px-to-rem($ouds-button-size-loader);
    color: var(--#{$prefix}btn-color);
    vertical-align: middle;
    background-color: transparent;
    border: 3px solid currentcolor;
    border-right-color: transparent;
    // stylelint-disable-next-line property-disallowed-list
    border-radius: 50%;
    animation: .75s linear infinite spinner-border;
  }

  @keyframes spinner-border {
    to { transform: rotate(360deg) #{"/* rtl:ignore */"}; }
  }

  &.loading-indeterminate,
  &.loading-determinate {
    position: relative;
    z-index: 0;
    overflow: hidden;
    color: transparent;

    &:hover,
    &:active,
    &:focus-visible,
    &:disabled {
      color: transparent;
    }

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      width: 100%;
      height: 100%;
      color: var(--#{$prefix}btn-color);
      content: "";
      background-color: currentcolor;
      mask-image: var(--#{$prefix}loading-indeterminate-icon);
      mask-repeat: no-repeat;
      mask-position: 50% 50%;
      mask-size: px-to-rem($ouds-button-size-loader);
      animation: loading-indeterminate-rotate 2s linear infinite;
    }
  }

  &.loading-determinate::before {
    animation: none;
  }

  @keyframes loading-indeterminate-rotate {
    100% {
      transform: rotate(360deg);
    }
  }

  &[class*="loading"],
  &:has(.loader-indeterminate-span) {
    &.btn-default {
      --#{$prefix}btn-color: #{$ouds-button-color-content-default-loading};
      --#{$prefix}btn-bg: #{$ouds-button-color-bg-default-loading};
      --#{$prefix}btn-border-color: #{$ouds-button-color-border-default-loading};
    }

    &.btn-minimal {
      --#{$prefix}btn-color: #{$ouds-button-color-content-minimal-loading};
      --#{$prefix}btn-bg: #{$ouds-button-color-bg-minimal-loading};
      --#{$prefix}btn-border-color: #{$ouds-button-color-border-minimal-loading};
    }

    &.btn-strong {
      --#{$prefix}btn-color: var(--#{$prefix}color-content-on-action-loading);
      --#{$prefix}btn-bg: var(--#{$prefix}color-action-loading);
      --#{$prefix}btn-border-color: var(--#{$prefix}color-opacity-invisible-black);
    }

    &.btn-negative {
      --#{$prefix}btn-color: var(--#{$prefix}color-content-on-action-negative);
      --#{$prefix}btn-bg: var(--#{$prefix}color-action-negative-loading);
      --#{$prefix}btn-border-color: var(--#{$prefix}color-opacity-invisible-black);
    }

    &.btn-default-on-colored-bg {
      --#{$prefix}btn-color: #{$ouds-button-color-content-default-loading-mono};
      --#{$prefix}btn-bg: #{$ouds-button-color-bg-default-loading-mono};
      --#{$prefix}btn-border-color: #{$ouds-button-color-border-default-loading-mono};
    }

    &.btn-strong-on-colored-bg {
      --#{$prefix}btn-color: #{$ouds-button-color-content-strong-loading-mono};
      --#{$prefix}btn-bg: #{$ouds-button-color-bg-strong-loading-mono};
      --#{$prefix}btn-border-color: #{$ouds-button-color-border-strong-loading-mono};
    }

    &.btn-minimal-on-colored-bg {
      --#{$prefix}btn-color: #{$ouds-button-color-content-minimal-loading-mono};
      --#{$prefix}btn-bg: #{$ouds-button-color-bg-minimal-loading-mono};
      --#{$prefix}btn-border-color: #{$ouds-button-color-border-minimal-loading-mono};
    }
  }

  //&.skeleton {
  //  color: transparent;
  //  background-color: $ouds-indicator-skeleton-color-bg;
  //  border: #{$ouds-border-width-none};
  //  animation: skeleton-loading 1s linear infinite alternate; Animation disabled for now to be consistent with mobile devs
  //}
  //
  //@if $enable-bootstrap-compatibility {
  //  &.placeholder {
  //    @extend .skeleton;
  //  }
  //}
  //
  //@keyframes skeleton-loading {  Animation disabled for now to be consistent with mobile devs
  //  0% {
  //    background-color: $ouds-indicator-skeleton-color-bg;
  //  }
  //  100% {
  //    background-color: $ouds-indicator-skeleton-color-gradient-middle;
  //  }
  //}
  // End mod
}

//
// Alternate buttons
//

// OUDS mod: define OUDS buttons
// scss-docs-start btn-variant-loops
.btn-default {
  --#{$prefix}btn-border-width: #{$ouds-button-border-width-default};
  --#{$prefix}btn-interaction-border-width: #{$ouds-button-border-width-default-interaction};
  @include button-variant(
    $ouds-button-color-bg-default-enabled,
    $ouds-button-color-border-default-enabled,
    $ouds-button-color-content-default-enabled
  );
  @include button-variant-focus(
    $ouds-button-color-bg-default-focus,
    $ouds-button-color-border-default-focus,
    $ouds-button-color-content-default-focus
  );
}

.btn-minimal {
  --#{$prefix}btn-border-width: #{$ouds-button-border-width-minimal};
  --#{$prefix}btn-interaction-border-width: #{$ouds-button-border-width-minimal-interaction};
  @include button-variant(
    $ouds-button-color-bg-minimal-enabled,
    $ouds-button-color-border-minimal-enabled,
    $ouds-button-color-content-minimal-enabled,
    $ouds-button-color-bg-minimal-hover,
    $ouds-button-color-border-minimal-hover,
    $ouds-button-color-content-minimal-hover,
    $ouds-button-color-bg-minimal-pressed,
    $ouds-button-color-border-minimal-pressed,
    $ouds-button-color-content-minimal-pressed,
    $ouds-button-color-bg-minimal-disabled,
    $ouds-button-color-border-minimal-disabled,
    $ouds-button-color-content-minimal-disabled
  );
  @include button-variant-focus(
    $ouds-button-color-bg-minimal-focus,
    $ouds-button-color-border-minimal-focus,
    $ouds-button-color-content-minimal-focus
  );
}

.btn-strong {
  --#{$prefix}btn-border-width: #{$ouds-border-width-none};
  --#{$prefix}btn-interaction-border-width: #{$ouds-border-width-none};
  @include button-variant(
    var(--#{$prefix}color-action-enabled),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-enabled),
    var(--#{$prefix}color-action-hover),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-hover),
    var(--#{$prefix}color-action-pressed),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-pressed),
    var(--#{$prefix}color-action-disabled),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-disabled)
  );
  @include button-variant-focus(
    var(--#{$prefix}color-action-focus),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-focus)
  );
}

.btn-negative {
  --#{$prefix}btn-border-width: #{$ouds-border-width-none};
  --#{$prefix}btn-interaction-border-width: #{$ouds-border-width-none};
  @include button-variant(
    var(--#{$prefix}color-action-negative-enabled),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-negative),
    var(--#{$prefix}color-action-negative-hover),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-negative),
    var(--#{$prefix}color-action-negative-pressed),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-negative),
    var(--#{$prefix}color-action-disabled),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-disabled)
  );
  @include button-variant-focus(
    var(--#{$prefix}color-action-negative-focus),
    var(--#{$prefix}color-opacity-invisible-black),
    var(--#{$prefix}color-content-on-action-negative)
  );
}

.btn-default-on-colored-bg {
  --#{$prefix}btn-border-width: #{$ouds-button-border-width-default};
  --#{$prefix}btn-interaction-border-width: #{$ouds-border-width-none}; // TODO Use token $ouds-button-border-width-default-interaction-mono when available
  @include button-variant(
    $ouds-button-color-bg-default-enabled-mono,
    $ouds-button-color-border-default-enabled-mono,
    $ouds-button-color-content-default-enabled-mono,
    $ouds-button-color-bg-default-hover-mono,
    $ouds-button-color-border-default-hover-mono,
    $ouds-button-color-content-default-hover-mono,
    $ouds-button-color-bg-default-pressed-mono,
    $ouds-button-color-border-default-pressed-mono,
    $ouds-button-color-content-default-pressed-mono,
    $ouds-button-color-bg-default-disabled-mono,
    $ouds-button-color-border-default-disabled-mono,
    $ouds-button-color-content-default-disabled-mono
  );
  @include button-variant-focus(
    $ouds-button-color-bg-default-focus-mono,
    $ouds-button-color-border-default-focus-mono,
    $ouds-button-color-content-default-focus-mono
  );
}

.btn-strong-on-colored-bg {
  --#{$prefix}btn-border-width: #{$ouds-border-width-none};
  --#{$prefix}btn-interaction-border-width: #{$ouds-border-width-none};
  @include button-variant(
    $ouds-button-color-bg-strong-enabled-mono,
    $ouds-button-color-border-strong-enabled-mono,
    $ouds-button-color-content-strong-enabled-mono,
    $ouds-button-color-bg-strong-hover-mono,
    $ouds-button-color-border-strong-hover-mono,
    $ouds-button-color-content-strong-hover-mono,
    $ouds-button-color-bg-strong-pressed-mono,
    $ouds-button-color-border-strong-pressed-mono,
    $ouds-button-color-content-strong-pressed-mono,
    $ouds-button-color-bg-strong-disabled-mono,
    $ouds-button-color-border-strong-disabled-mono,
    $ouds-button-color-content-strong-disabled-mono
  );
  @include button-variant-focus(
    $ouds-button-color-bg-strong-focus-mono,
    $ouds-button-color-border-strong-focus-mono,
    $ouds-button-color-content-strong-focus-mono
  );
}

.btn-minimal-on-colored-bg {
  --#{$prefix}btn-border-width: #{$ouds-button-border-width-minimal};
  --#{$prefix}btn-interaction-border-width: #{$ouds-button-border-width-minimal-interaction};
  @include button-variant(
    $ouds-button-color-bg-minimal-enabled-mono,
    $ouds-button-color-border-minimal-enabled-mono,
    $ouds-button-color-content-minimal-enabled-mono,
    $ouds-button-color-bg-minimal-hover-mono,
    $ouds-button-color-border-minimal-hover-mono,
    $ouds-button-color-content-minimal-hover-mono,
    $ouds-button-color-bg-minimal-pressed-mono,
    $ouds-button-color-border-minimal-pressed-mono,
    $ouds-button-color-content-minimal-pressed-mono,
    $ouds-button-color-bg-minimal-disabled-mono,
    $ouds-button-color-border-minimal-disabled-mono,
    $ouds-button-color-content-minimal-disabled-mono
  );
  @include button-variant-focus(
    $ouds-button-color-bg-minimal-focus-mono,
    $ouds-button-color-border-minimal-focus-mono,
    $ouds-button-color-content-minimal-focus-mono
  );
}

@if $enable-bootstrap-compatibility {
  .btn-primary {
    @extend .btn-strong;
  }

  .btn-success {
    @extend .btn-default;
  }

  .btn-danger {
    @extend .btn-negative;
  }

  .btn-warning {
    @extend .btn-negative;
  }

  .btn-info {
    @extend .btn-minimal;
  }

  .btn-light {
    @extend .btn-minimal;
  }

  .btn-dark {
    @extend .btn-strong;
  }

  .btn-secondary {
    @extend .btn-default;
  }
}

@if $enable-bootstrap-compatibility { // OUDS mod
  @each $color, $value in $theme-colors {
    .btn-outline-#{$color} {
      @extend .btn-default; // OUDS mod
    }
  }
}
// scss-docs-end btn-variant-loops
// End mod

// OUDS mod: OUDS Web-specific toggle button - not implemented yet
//.btn-toggle {
//  @include button-variant(transparent, var(--#{$prefix}color-border-emphasized), var(--#{$prefix}body-color), transparent, var(--#{$prefix}color-border-emphasized), var(--#{$prefix}primary), $ouds-color-orange-500, $ouds-color-orange-500, $black, transparent, var(--#{$prefix}color-border-emphasized), var(--#{$prefix}color-content-disabled));
//
//  .btn-check:checked + & {
//    color: var(--#{$prefix}highlight-color);
//    background-color: var(--#{$prefix}highlight-bg);
//    border-color: var(--#{$prefix}border-color);
//  }
//
//  .btn-group .btn-check + &.btn:not(:first-of-type) {
//    border-left: 0;
//
//    &::before {
//      display: inline-block;
//      width: var(--#{$prefix}btn-border-width);
//      height: 100%;
//      content: "";
//    }
//  }
//
//  .btn-group .btn-check + &.btn:not(:last-of-type) {
//    border-right: 0;
//
//    &::after {
//      display: inline-block;
//      width: var(--#{$prefix}btn-border-width);
//      height: 100%;
//      content: "";
//    }
//  }
//}
// End mod


// OUDS mod: OUDS Web-specific dropdown button - not implemented yet
//.btn-dropdown {
//  @include button-variant(var(--#{$prefix}body-bg), var(--#{$prefix}color-border-emphasized), var(--#{$prefix}body-color), var(--#{$prefix}body-bg), var(--#{$prefix}color-border-emphasized), var(--#{$prefix}body-color), var(--#{$prefix}body-bg), var(--#{$prefix}body-color), var(--#{$prefix}body-color), var(--#{$prefix}body-bg), var(--#{$prefix}color-content-disabled), var(--#{$prefix}color-content-disabled));
//}
// End mod


//
// Link buttons
//

// Make a button look and behave like a link - not implemented yet
//.btn-link {
//  // OUDS mod: no redefinition of --#{$prefix}btn-font-weight
//  --#{$prefix}btn-color: #{$btn-link-color};
//  --#{$prefix}btn-bg: transparent;
//  --#{$prefix}btn-border-color: transparent;
//  --#{$prefix}btn-hover-color: #{$btn-link-hover-color};
//  --#{$prefix}btn-hover-border-color: transparent;
//  --#{$prefix}btn-active-color: var(--#{$prefix}btn-hover-color); // OUDS mod
//  --#{$prefix}btn-active-border-color: transparent;
//  --#{$prefix}btn-disabled-color: #{$btn-link-disabled-color};
//  --#{$prefix}btn-disabled-border-color: transparent;
//  --#{$prefix}btn-box-shadow: 0 0 0 #{$black}; // Can't use `none` as keyword negates all values when used with multiple shadows
//  // OUDS mod: no redefinition of --#{$prefix}btn-focus-shadow-rgb
//
//  text-decoration: $link-decoration;
//  @if $enable-gradients {
//    background-image: none;
//  }
//
//  &:hover,
//  &:focus-visible {
//    text-decoration: $link-hover-decoration;
//  }
//
//  // OUDS mod: no focus-visible color change
//
//  // No need for an active state here
//}


//
// Button Sizes - not implemented yet
// OUDS mod: 6th argument to set .btn-icon padding
// OUDS mod: 7th argument to set .btn-letter-spacing

//.btn-lg {
//  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg, $btn-line-height-lg, $btn-icon-padding-x-lg, $btn-letter-spacing-lg);
//}
//
//.btn-sm {
//  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm, $btn-line-height-sm, $btn-icon-padding-x-sm, $btn-letter-spacing-sm);
//}


// OUDS mod: icon button (icon only, without text)
.btn-icon {
  --#{$prefix}btn-padding-start: #{$ouds-button-space-inset-icon-alone};
  --#{$prefix}btn-padding-end: #{$ouds-button-space-inset-icon-alone};

  > svg,
  > img,
  > .icon {
    width: px-to-rem($ouds-button-size-icon-only);
    height: px-to-rem($ouds-button-size-icon-only);
    font-size: px-to-rem($ouds-button-size-icon-only);
    line-height: px-to-rem($ouds-button-size-icon-only);
  }
}
// End mod

// OUDS mod: social button - not implemented yet
//.btn-social {
//  --#{$prefix}btn-border-color: currentcolor;
//  --#{$prefix}btn-hover-color: #{$white};
//  --#{$prefix}btn-hover-bg: var(--#{$prefix}network-color, #{$black});
//  --#{$prefix}btn-hover-border-color: var(--#{$prefix}network-color, #{$black});
//  --#{$prefix}btn-active-color: var(--#{$prefix}highlight-color);
//  --#{$prefix}btn-active-bg: var(--#{$prefix}highlight-bg);
//  --#{$prefix}btn-active-border-color: var(--#{$prefix}border-color);
//  --#{$prefix}btn-disabled-color: var(--#{$prefix}color-content-disabled);
//  --#{$prefix}btn-disabled-bg: transparent;
//  @include border-radius(50%, 50%);
//  @include button-icon(var(--#{$prefix}network-logo));
//}
//
//@each $name in map-keys($btn-social-networks) {
//  $network: map-get($btn-social-networks, $name);
//
//  .btn-#{$name} {
//    --#{$prefix}network-color: #{map-get($network, "color")};
//    --#{$prefix}network-logo: #{escape-svg(url("data:image/svg+xml,#{map-get($network, "icon")}"))};
//
//    &::before {
//      mask-size: if(map-has-key($network, "size"), map-get($network, "size"), null);
//
//      @if "linkedin" == $name {
//        transform: translateY(-1px);
//      }
//    }
//  }
//}
// End mod
